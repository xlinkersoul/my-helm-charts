apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nginx-insecure.fullname" . }}
  labels:
    {{- include "nginx-insecure.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nginx-insecure.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        helm.sh/redeploy-timestamp: "{{ now | unixEpoch }}"
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nginx-insecure.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nginx-insecure.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-html
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command:
            - sh
            - -c
            - |
              for f in /template/*; do
                if [ -f "$f" ]; then
                  filename=$(basename "$f")
                  if [ "${filename##*.}" = "template" ]; then
                    out="/usr/share/nginx/html/${filename%.template}"
                    envsubst < "$f" > "$out"
                  else
                    cp "$f" "/usr/share/nginx/html/$filename"
                  fi
                fi
              done
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: html-volume
              mountPath: /usr/share/nginx/html
            - name: config-volume
              mountPath: /template
              readOnly: true
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            # - name: config-volume
            #   mountPath: /usr/share/nginx/html
              # readOnly: true
            - name: html-volume
              mountPath: /usr/share/nginx/html
            - name: tmp-volume
              mountPath: /tmp
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: html-volume
          emptyDir: {}
        - name: config-volume
          configMap:
            name: {{ include "my-app.fullname" . }}-config
        - name: tmp-volume
          emptyDir: {}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}